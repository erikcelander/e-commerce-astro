let f=[],E=(e,l)=>{let t=[],n={get(){return n.lc||n.listen(()=>{})(),n.value},l:l||0,lc:0,listen(i,s){return n.lc=t.push(i,s||n.l)/2,()=>{let d=t.indexOf(i);~d&&(t.splice(d,2),--n.lc||n.off())}},notify(i,s){let d=!f.length;for(let r=0;r<t.length;r+=2)f.push(t[r],t[r+1],n.value,i,s);if(d){for(let r=0;r<f.length;r+=5){let o;for(let u=r+1;!o&&(u+=5)<f.length;)f[u]<f[r+1]&&(o=f.push(f[r],f[r+1],f[r+2],f[r+3],f[r+4]));o||f[r](f[r+2],f[r+3],f[r+4])}f.length=0}},off(){},set(i){let s=n.value;s!==i&&(n.value=i,n.notify(s))},subscribe(i,s){let d=n.listen(i,s);return i(n.value),d},value:e};return n};let g=(e,l,t,n)=>(e.events=e.events||{},e.events[t+10]||(e.events[t+10]=n(i=>{e.events[t].reduceRight((s,d)=>(d(s),s),{shared:{},...i})})),e.events[t]=e.events[t]||[],e.events[t].push(l),()=>{let i=e.events[t],s=i.indexOf(l);i.splice(s,1),i.length||(delete e.events[t],e.events[t+10](),delete e.events[t+10])}),N=1e3,p=(e,l)=>g(e,n=>{let i=l(n);i&&e.events[6].push(i)},5,n=>{let i=e.listen;e.listen=(...d)=>(!e.lc&&!e.active&&(e.active=!0,n()),i(...d));let s=e.off;return e.events[6]=[],e.off=()=>{s(),setTimeout(()=>{if(e.active&&!e.lc){e.active=!1;for(let d of e.events[6])d();e.events[6]=[]}},N)},()=>{e.listen=i,e.off=s}}),T=e=>e,c={},v={addEventListener(){},removeEventListener(){}};function O(){try{return typeof localStorage<"u"}catch{return!1}}O()&&(c=localStorage);let U={addEventListener(e,l,t){window.addEventListener("storage",l),window.addEventListener("pageshow",t)},removeEventListener(e,l,t){window.removeEventListener("storage",l),window.removeEventListener("pageshow",t)}};typeof window<"u"&&(v=U);function h(e,l=void 0,t={}){let n=t.encode||T,i=t.decode||T,s=E(l),d=s.set;s.set=u=>{typeof u>"u"?delete c[e]:c[e]=n(u),d(u)};function r(u){u.key===e?u.newValue===null?d(void 0):d(i(u.newValue)):c[e]||d(void 0)}function o(){s.set(c[e]?i(c[e]):l)}return p(s,()=>{if(o(),t.listen!==!1)return v.addEventListener(e,r,o),()=>{v.removeEventListener(e,r,o)}}),s}const a=h("cart",[],{encode:JSON.stringify,decode:JSON.parse});function M(e){const l=a.get(),t=l.findIndex(n=>n.id===e.id);if(t!==-1){const n=l.slice();n[t]={...n[t],quantity:n[t].quantity+1},a.set(n)}else a.set([...l,{...e,quantity:1}])}function I(e){const t=a.get().filter(n=>n.id!==e);a.set(t)}function m(e,l){if(l===0)return I(e);const n=a.get().map(i=>i.id===e?{...i,quantity:Math.max(l,0)}:i);a.set(n)}export{M as a,a as c,m as u};
